#define QNAPI
#define QNAPI extern
#define QNAPI __declspec(dllimport)
#define QNAPI __attribute__((__visibility__("default")))
#define QN_EXTC_BEGIN extern "C" {
#define QN_EXTC_BEGIN
#define QN_STMT_BEGIN					do
#define QN_STMT_END						while(0)
#define _QN_GET_MAC_3(_1,_2,_3,N, ...)	N
#define _QN_STRING(x)					#x
#define _QN_UNICODE(x)					L##x
#define _QN_CONCAT_2(x,y)				x##y
#define _QN_CONCAT_3(x,y,z)				x##y##z
#define QN_STRING(x)					_QN_STRING(x)
#define QN_UNICODE(x)					_QN_UNICODE(x)
#define QN_CONCAT_2(x,y)				_QN_CONCAT_2(x, y)
#define QN_CONCAT_3(x,y,z)				_QN_CONCAT_3(x, y, z)
#define QN_CONCAT(...)					_QN_GET_MAC_3(__VA_ARGS__, QN_CONCAT_3, QN_CONCAT_2)(__VA_ARGS__)
#define QN_COUNTOF(arr)					(sizeof(arr)/sizeof((arr)[0]))
#define QN_OFFSETOF(type,mem)			((size_t)((char*)&((type*)0)->mem))
#define QN_MEMBEROF(type,p,off)			(*(type*)((void*)((char*)(p)+(size_t)(offset))))
#define QN_MAX(a,b)						(((a)>(b))?(a):(b))
#define QN_MIN(a,b)						(((a)<(b))?(a):(b))
#define QN_ABS(v)						(((v)<0)?-(v):(v))
#define QN_CLAMP(v,vmin,vmax)			((v)<(vmin)?(vmin):(v)>(vmax)?(vmax):(v))
#define QN_BIT(bit)						(1<<(bit))
#define QN_BIT_TEST(v,bit)				(((v)&(1<<(bit)))!=0)
#define QN_MASK(v,mask)					((mask==0)?(v):(v)&(mask))
#define QN_MASK_TEST(v,mask)			(((v)&(mask))!=0)
#define QN_MASK_SET(pv,mask,isset)		((isset)?((*(pv))|=(mask)):((*(pv))&=~(mask)))
